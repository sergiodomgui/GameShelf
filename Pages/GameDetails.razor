@page "/game-details/{Id:guid}"
@using GameShelfWeb.Data
@using GameShelfWeb.Models
@inject GameRepository Repo
@inject NavigationManager Navigation

<h3>Detalles del Juego</h3>

@if (game == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <h4>@game.Title</h4>
    <p><strong>Plataforma:</strong> @game.Platform</p>
    <p><strong>Estado:</strong> @game.Status</p>
    <p><strong>Descripción:</strong> @game.Description</p>
    
    <div class="mt-3">
        <h5>Cambiar Estado</h5>
        <button class="btn btn-info" @onclick="() => ChangeStatus(GameStatus.Playing)">Jugando</button>
        <button class="btn btn-warning" @onclick="() => ChangeStatus(GameStatus.Paused)">Pausado</button>
        <button class="btn btn-success" @onclick="() => ChangeStatus(GameStatus.Completed)">Completado</button>
    </div>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Game? game;

    protected override async Task OnInitializedAsync()
    {
        await LoadGame();
    }

    private async Task LoadGame()
    {
        game = await Repo.GetAsync(Id); // ✅ Corrected call to GetAsync
    }

    private async Task ChangeStatus(GameStatus newStatus)
    {
        await Repo.SetStatusAsync(Id, newStatus); // ✅ Corrected call to SetStatusAsync
        await LoadGame(); // Reload the game details to show the change
        StateHasChanged();
    }
}
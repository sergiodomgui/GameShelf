@page "/edit-game/{Id:guid}"
@using GameShelfWeb.Data
@using GameShelfWeb.Models
@inject GameRepository Repo
@inject NavigationManager Navigation

<h3>Editar Juego</h3>

@if (gameToEdit == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="@gameToEdit" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="title" class="form-label">Título</label>
            <InputText id="title" class="form-control" @bind-Value="gameToEdit.Title" />
        </div>
        <div class="mb-3">
            <label for="platform" class="form-label">Plataforma</label>
            <InputText id="platform" class="form-control" @bind-Value="gameToEdit.Platform" />
        </div>
        
        <button type="submit" class="btn btn-primary">Actualizar Juego</button>
    </EditForm>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Game? gameToEdit;

    // Se convierte a la versión asíncrona
    protected override async Task OnInitializedAsync()
    {
        // Corregido: Llama a GetAsync con await
        gameToEdit = await Repo.GetAsync(Id); 
    }

    // Se convierte a la versión asíncrona
    private async Task HandleSubmit()
    {
        if (gameToEdit != null)
        {
            // Corregido: Llama a UpdateAsync con await
            await Repo.UpdateAsync(gameToEdit); 
            Navigation.NavigateTo("/");
        }
    }
}
@page "/"
@using GameShelfWeb.Data
@using GameShelfWeb.Models
@inject GameRepository Repo

<PageTitle>Mi GameShelf</PageTitle>

<h1>ðŸ“š Mi GameShelf</h1>

@if (games == null)
{
    <p><em>Cargando juegos...</em></p>
}
else
{
    <div class="d-flex justify-content-between align-items-center mb-3">
        <button class="btn btn-primary" @onclick="() => ChangePage(-1)" disabled="@(currentPage == 1)">
            &laquo; Anterior
        </button>
        <span>
            PÃ¡gina <strong>@currentPage</strong> de <strong>@totalPages</strong>
        </span>
        <button class="btn btn-primary" @onclick="() => ChangePage(1)" disabled="@(currentPage >= totalPages)">
            Siguiente &raquo;
        </button>
    </div>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>TÃ­tulo</th>
                <th>Plataforma</th>
                <th>Estado</th>
                <th>Fecha Completado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Title</td>
                    <td>@game.Platform</td>
                    <td>@game.Status</td>
                    <td>@game.DateCompleted?.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Game>? games;
    private int currentPage = 1;
    private int pageSize = 20; // Â¡Puedes cambiar este nÃºmero!
    private int totalGames;
    private int totalPages;

    protected override void OnInitialized()
    {
        totalGames = Repo.Count();
        totalPages = (int)Math.Ceiling(totalGames / (double)pageSize);
        LoadGames();
    }

    private void LoadGames()
    {
        games = Repo.GetPaged(currentPage, pageSize);
    }

    private void ChangePage(int amount)
    {
        var newPage = currentPage + amount;
        if (newPage > 0 && newPage <= totalPages)
        {
            currentPage = newPage;
            LoadGames();
        }
    }
}